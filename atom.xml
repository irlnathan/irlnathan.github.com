<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SailsCasts]]></title>
  <link href="http://irlnathan.github.com/atom.xml" rel="self"/>
  <link href="http://irlnathan.github.com/"/>
  <updated>2013-11-02T00:48:54-05:00</updated>
  <id>http://irlnathan.github.com/</id>
  <author>
    <name><![CDATA[Irl Nathan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Back to addressing data acquisiteon and a storage regime.]]></title>
    <link href="http://irlnathan.github.com/blog/2013/02/22/back-to-addressing-data-acquisiteon-and-a-storage-regime/"/>
    <updated>2013-02-22T21:01:00-06:00</updated>
    <id>http://irlnathan.github.com/blog/2013/02/22/back-to-addressing-data-acquisiteon-and-a-storage-regime</id>
    <content type="html"><![CDATA[<p>So I needed a strategy for how and when a Series would be obtained and stored.  A quick call over to the awesome guys at <a href="" title="https://rails.pockethotline.com/">Rails Hotline</a> and Chap Ambrose and I had my answer.</p>

<p>Series at this point will be created using the regular new route &#8220;manually&#8221; for example, &#8216;WSECOUT&#8217;.  There will be an admin page where you can manually trigger the data to be retrieved via the FRED API.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stepping back and looking at a wireframe]]></title>
    <link href="http://irlnathan.github.com/blog/2013/02/21/stepping-back-and-looking-at-a-wireframe/"/>
    <updated>2013-02-21T11:12:00-06:00</updated>
    <id>http://irlnathan.github.com/blog/2013/02/21/stepping-back-and-looking-at-a-wireframe</id>
    <content type="html"><![CDATA[<p>I&#8217;m getting lost in the weeds and I need to step back and understand more of the overall in order to move forward.</p>

<p><img src="http://irlnathan.github.com/images/chart.png" title="Optional title" alt="Alt text" /></p>

<ol>
<li>Within a Hack there is a question.</li>
<li>Who created the hack (A User System)</li>
<li>Displaying categories</li>
<li>Add Video and Grayboxing.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Integrating data acquisition from FRED into the rails app]]></title>
    <link href="http://irlnathan.github.com/blog/2013/02/20/integrating-data-acquisition-from-fred-into-the-rails-app/"/>
    <updated>2013-02-20T09:43:00-06:00</updated>
    <id>http://irlnathan.github.com/blog/2013/02/20/integrating-data-acquisition-from-fred-into-the-rails-app</id>
    <content type="html"><![CDATA[<p>The current logic of acquiring Series data from FRED is contained in four ruby files which inherit from Active Record.  They are:</p>

<ul>
<li>series.rb</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;logger&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span>
</span><span class='line'><span class="ss">:adapter</span> <span class="o">=&gt;</span> <span class="s2">&quot;postgresql&quot;</span><span class="p">,</span>
</span><span class='line'><span class="ss">:enconding</span> <span class="o">=&gt;</span> <span class="s2">&quot;unicode&quot;</span><span class="p">,</span>
</span><span class='line'><span class="ss">:database</span> <span class="o">=&gt;</span> <span class="s2">&quot;fred&quot;</span><span class="p">,</span>
</span><span class='line'><span class="ss">:pool</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'><span class="ss">:username</span> <span class="o">=&gt;</span> <span class="s2">&quot;*****&quot;</span><span class="p">,</span>
</span><span class='line'><span class="ss">:password</span> <span class="o">=&gt;</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Series</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:series_name</span><span class="p">,</span> <span class="ss">:realtime_start</span><span class="p">,</span> <span class="ss">:realtime_end</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:observation_start</span><span class="p">,</span>
</span><span class='line'>                  <span class="ss">:observation_end</span><span class="p">,</span> <span class="ss">:frequency</span><span class="p">,</span> <span class="ss">:frequency_short</span><span class="p">,</span> <span class="ss">:units</span><span class="p">,</span> <span class="ss">:units_short</span><span class="p">,</span>
</span><span class='line'>                  <span class="ss">:seasonal_adjustment</span><span class="p">,</span> <span class="ss">:seasonal_adjustment_short</span><span class="p">,</span> <span class="ss">:last_updated</span><span class="p">,</span>
</span><span class='line'>                  <span class="ss">:popularity</span><span class="p">,</span> <span class="ss">:notes</span><span class="p">,</span> <span class="ss">:created_at</span><span class="p">,</span> <span class="ss">:updated_at</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:observations</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;seriesgrab&#39;</span>
</span><span class='line'><span class="c1"># This instantiates the Seriesgrab calling the method getSeries and passing it the </span>
</span><span class='line'><span class="c1"># &#39;Series&#39; argument (e.g. &#39;WSECOUT&#39;)</span>
</span><span class='line'><span class="vi">@series</span> <span class="o">=</span> <span class="no">Seriesgrab</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">getSeries</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># @series is equal to @config (returned from getSeries method).  This data contains</span>
</span><span class='line'><span class="c1"># a field :id (whose value is the series name, e.g. &#39;WSECOUT&#39;).  The field name, however,</span>
</span><span class='line'><span class="c1"># is also the field name rails uses as the key for tables.  So I replace the value</span>
</span><span class='line'><span class="c1"># in a new field called series_name and then remove the :id field.</span>
</span><span class='line'><span class="vi">@series</span><span class="o">[</span><span class="s1">&#39;series&#39;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s1">&#39;series_name&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="vi">@series</span><span class="o">[</span><span class="s1">&#39;series&#39;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s1">&#39;id&#39;</span><span class="o">]</span>
</span><span class='line'><span class="vi">@series</span><span class="o">[</span><span class="s1">&#39;series&#39;</span><span class="o">][</span><span class="mi">0</span><span class="o">].</span><span class="n">delete</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#The data I need is within the hash &#39;series&#39; so I set the instance variable to the</span>
</span><span class='line'><span class="c1"># new position</span>
</span><span class='line'><span class="vi">@series</span> <span class="o">=</span> <span class="vi">@series</span><span class="o">[</span><span class="s1">&#39;series&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># I pass the hash and its fields to the model to save in the database</span>
</span><span class='line'><span class="no">Series</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="vi">@series</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Not sure this is the best practice but I need the record that I just created so</span>
</span><span class='line'><span class="c1"># I grab the last one</span>
</span><span class='line'><span class="vi">@seriesit</span> <span class="o">=</span> <span class="no">Series</span><span class="o">.</span><span class="n">last</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;observation&#39;</span>
</span><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;observationgrab&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Using the same argument (e.g. &#39;WSECOUT&#39;) I now grab it&#39;s observations</span>
</span><span class='line'><span class="vi">@observations</span> <span class="o">=</span> <span class="no">Observationgrab</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">getObservations</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># This returns an array that I loop through</span>
</span><span class='line'><span class="vi">@observations</span><span class="o">[</span><span class="s1">&#39;observation&#39;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">observation</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># I had to create a separate instance variable because when I just past the </span>
</span><span class='line'>  <span class="c1"># the next &#39;observation&#39; I received an error.</span>
</span><span class='line'>  <span class="vi">@the_observation</span> <span class="o">=</span> <span class="n">observation</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># In the end I&#39;m using the join to create an observation that is tied to the</span>
</span><span class='line'>  <span class="c1"># correct series.  </span>
</span><span class='line'>  <span class="vi">@test</span> <span class="o">=</span> <span class="vi">@seriesit</span><span class="o">.</span><span class="n">observations</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="vi">@the_observation</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>seriesgrab.rb</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;net/http&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;uri&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;xmlsimple&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Seriesgrab</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">getSeries</span><span class="p">(</span><span class="n">series</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># Builds the url from the arguments -&gt; series</span>
</span><span class='line'>    <span class="n">series_urlString</span> <span class="o">=</span> <span class="s2">&quot;http://api.stlouisfed.org/fred/series?series_id=&quot;</span>
</span><span class='line'>    <span class="o">+</span> <span class="n">series</span> <span class="o">+</span> <span class="o">&amp;&lt;</span><span class="n">api_key</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># Parses the url you want</span>
</span><span class='line'>    <span class="n">series_uri</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">series_urlString</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Send the http request</span>
</span><span class='line'>      <span class="n">series_response</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">get_response</span><span class="p">(</span><span class="n">series_uri</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># captures the http response which is in XML</span>
</span><span class='line'>      <span class="n">series_responseHolder</span> <span class="o">=</span> <span class="n">series_response</span><span class="o">.</span><span class="n">body</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># parses the XML into a hash</span>
</span><span class='line'>      <span class="vi">@config</span> <span class="o">=</span> <span class="no">XmlSimple</span><span class="o">.</span><span class="n">xml_in</span><span class="p">(</span><span class="n">series_responseHolder</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>        
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>observation.rb</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;logger&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span>
</span><span class='line'><span class="ss">:adapter</span> <span class="o">=&gt;</span> <span class="s2">&quot;postgresql&quot;</span><span class="p">,</span>
</span><span class='line'><span class="ss">:enconding</span> <span class="o">=&gt;</span> <span class="s2">&quot;unicode&quot;</span><span class="p">,</span>
</span><span class='line'><span class="ss">:database</span> <span class="o">=&gt;</span> <span class="s2">&quot;fred&quot;</span><span class="p">,</span>
</span><span class='line'><span class="ss">:pool</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'><span class="ss">:username</span> <span class="o">=&gt;</span> <span class="s2">&quot;****&quot;</span><span class="p">,</span>
</span><span class='line'><span class="ss">:password</span> <span class="o">=&gt;</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Observation</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:date</span><span class="p">,</span> <span class="ss">:value</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:series</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>observationgrab.rb</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;net/http&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;uri&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;xmlsimple&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Observationgrab</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">getObservations</span><span class="p">(</span><span class="n">series</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># Builds the url from the arguments -&gt; seriesURL</span>
</span><span class='line'>    <span class="n">observations_urlString</span> <span class="o">=</span> <span class="s2">&quot;http://api.stlouisfed.org/fred/series/observations?series_id=&quot;</span>
</span><span class='line'>     <span class="o">+</span> <span class="n">series</span> <span class="o">+</span> <span class="s2">&quot;&amp;api_key&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># Parses the url you want</span>
</span><span class='line'>    <span class="n">observations_uri</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">observations_urlString</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Send the http request</span>
</span><span class='line'>      <span class="n">observations_response</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">get_response</span><span class="p">(</span><span class="n">observations_uri</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># captures the http response which is in XML</span>
</span><span class='line'>      <span class="n">observations_responseHolder</span> <span class="o">=</span> <span class="n">observations_response</span><span class="o">.</span><span class="n">body</span>
</span><span class='line'>
</span><span class='line'>      <span class="vi">@config</span> <span class="o">=</span> <span class="no">XmlSimple</span><span class="o">.</span><span class="n">xml_in</span><span class="p">(</span><span class="n">observations_responseHolder</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Task: Figure out how to incorporate this logic into my existing rails project.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a Data Model]]></title>
    <link href="http://irlnathan.github.com/blog/2013/02/19/creating-a-data-model/"/>
    <updated>2013-02-19T16:32:00-06:00</updated>
    <id>http://irlnathan.github.com/blog/2013/02/19/creating-a-data-model</id>
    <content type="html"><![CDATA[<p>Todays Assignment: Create a new Data Model for hackEconomics.</p>

<h2>Data Model Goals</h2>

<ol>
<li>Allow FRED data series to be contained in logical groups called &#8216;hacks&#8217;.  For example, you can create a group called U.S. Government Revenue, Spending, and Deficit.  This group would contain the data series for each.</li>
</ol>


<p>The tables will be:</p>

<ul>
<li>Hacks (has_many :hackeries, has_many :series, :through => hackeries)</li>
<li>Hackeries (belongs_to :hacks, belongs_to :series)</li>
<li>Series (has_many :observations, has_many :hackeries, has_many :hacks, :through => hackeries )</li>
<li>Observations (belongs_to :series)</li>
</ul>


<p>A hack consists of one or more series.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating hackEconomics...step-by-step]]></title>
    <link href="http://irlnathan.github.com/blog/2013/02/18/creating-hackeconomics-dot-dot-dot-step-by-step/"/>
    <updated>2013-02-18T12:12:00-06:00</updated>
    <id>http://irlnathan.github.com/blog/2013/02/18/creating-hackeconomics-dot-dot-dot-step-by-step</id>
    <content type="html"><![CDATA[<h2>My Initial Todo List</h2>

<ol>
<li>Grab data from the FRED api.</li>
<li>Choosing a charting engine.</li>
<li>Format the data from FRED so that the Charting Engine can read it.</li>
<li>Save the data in a database.</li>
<li>Create a rails app that can view the data and present the charts.</li>
</ol>


<p>I&#8217;ve completed the first five steps and I plan to document how I did those steps in future posts.  The data collection is done in ruby using Active Record independently of rails.  This was great for learning how Active Record &#8220;really&#8221; works, but is absolutely awful for moving the project to a service like Heroku to actually test it in the wild.</p>

<p>Here&#8217;s the tech stack so far:</p>

<ul>
<li>MVC: Rails</li>
<li>Database: Postgresql</li>
<li>Charts: <a href="" title="http://www.highcharts.com/">highstocks</a></li>
<li>XML Parsing: <a href="" title="http://xml-simple.rubyforge.org/">xml-simple gem</a></li>
<li>Number formatting: <a href="" title="http://josscrowcroft.github.com/accounting.js/">account.js</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to create your first chart using the Flot jquery library]]></title>
    <link href="http://irlnathan.github.com/blog/2012/12/05/how-to-create-your-first-chart-u-using-the-flot-jquery-library/"/>
    <updated>2012-12-05T08:54:00-06:00</updated>
    <id>http://irlnathan.github.com/blog/2012/12/05/how-to-create-your-first-chart-u-using-the-flot-jquery-library</id>
    <content type="html"><![CDATA[<p>An important part of my new project <a href="www.hackeconomics.com">hackeconomics</a> relies upon the use of charts.  I wasn&#8217;t happy with having static images of charts and instead wanting something a bit more dynamic.  Poking around I came across the jquery <a href="http://www.flotcharts.org/">flot</a> library.  Below is my first &#8220;real&#8221; chart.</p>

<!-- The example chart wrapped in a div -->




<div>
<html>
<head> 
    <meta http-equiv="Content-Type" content="text/html"; charset=utf-8">
    <title> Flot Example</title>
    <script language="javascript" type="text/javascript" src="http://irlnathan.github.com/javascripts/jquery.js"></script>
    <script language="javascript" type="text/javascript" src="http://irlnathan.github.com/javascripts/jquery.flot.min.js"></script>
    <script src="http://irlnathan.github.com/javascripts/jquery_currency.js"></script>
    <script src="http://irlnathan.github.com/javascripts/accounting.min.js"></script>
    <link rel="stylesheet" href="http://irlnathan.github.com/stylesheets/layout.css">
     <link rel="stylesheet" href="http://irlnathan.github.com/stylesheets/graph.css">
    <!--[if lte IE 8]>
        <script language="javascript" type="text/javascript" src="http://irlnathan.github.com/javascripts/excanvas.js""></script>
    <![endif]-->
</head>
<body>
    <div class="title">US Annual GDP vs. Debt</div>
    <div class="graph-info">
        <a href="javascript:void(0)" class="gdp">US GDP ($Billions)</a>
        <a href="javascript:void(0)" class="debt">US Debt ($Billions)</a>
    </div>
    <div id = "tip"></div>
    <div id = "placeholder" style="width: 550px; height:300px;"></div>
</body>
<script type="text/javascript">
    var data, data1, options, chart, chart2;
    var data2, data3;
    data2 = [ [2000, 9951.5], [2001, 10286.2], [2002, 10642.3], [2003, 11142.2], [2004, 11853.3], [2005, 12623.0], [2006, 13377.2], [2007, 14028.7], [2008, 14291.6], [2009, 13973.7], [2010, 14498.9], [2011, 15075.7] ];
    data1 = [ [2000, 5698.93], [2001, 5812.87], [2002, 6191.61], [2003, 6728.05], [2004, 7345.15], [2005, 7929.14], [2006, 8494.60], [2007, 8494.60], [2008, 9913.53], [2009, 11723.35], [2010, 13390.44], [2011, 14656.62] ];
    data = [{data: data2, 
                color: '#71c73e', 
                bars: {
                    show:true, 
                    barWidth:0.5, 
                    align: 'center'}
            },

            { data:data1, 
              color: 'red', 
              lines: {
                show:true}, 
              points: {
                show: true,
                radius: 5}
            }
            
            ];
    options = {
        xaxis: {
            tickColor: 'transparent',
            tickSize: 1
        },
        grid: {
            color: '#646464',
            borderColor: 'transparent',
            borderWidth: 20,
            hoverable: true
        },
        yaxis: {
            tickSize: 1000,
            min: 4900,
            max: 15500
        }  

    };

    $(document).ready(function() {
    chart1 = $.plot($("#placeholder"),data,options);
    //chart2 = $.plot($("#placeholder2"),data,options);

    // https://github.com/gilbitron/jQuery-Currency
    $('.yAxis .tickLabel').currency({decimals: 0});

    function showTooltip(x, y, contents) {
        $('<div id="tooltip">' + contents + '</div>').css({
            top: y - 16,
            left: x + 20
        }).appendTo('body').fadeIn();
    }
     
    var previousPoint = null;
     
    $('#placeholder').bind('plothover', function (event, pos, item) {
        if (item) {
            if (previousPoint != item.datapoint) {
                previousPoint = item.datapoint;
                $('#tooltip').remove();
                var x = item.datapoint[0],

                    // http://josscrowcroft.github.com/accounting.js/#download
                   y = accounting.formatMoney(item.datapoint[1], "$", 0);
                   // y = item.datapoint[1];
                    showTooltip(pos.pageX, pos.pageY, ' Billions: ' + y + ' Year: ' + x);
            }
        } else {
            $('#tooltip').remove();
            previousPoint = null;
        }
    });

 previousPoint = null;
     
    $('#placeholder2').bind('plothover', function (event, pos, item) {
        if (item) {
            if (previousPoint != item.datapoint) {
                previousPoint = item.datapoint;
                $('#tooltip').remove();
                var x = item.datapoint[0],

                    // http://josscrowcroft.github.com/accounting.js/#download
                   y = accounting.formatMoney(item.datapoint[1], "$", 0);
                   // y = item.datapoint[1];
                    showTooltip(pos.pageX, pos.pageY, ' Billions: ' + y + ' Year: ' + x);
            }
        } else {
            $('#tooltip').remove();
            previousPoint = null;
        }
    });


});

</script>
</html> 

    
</div>


<!-- The end of the example chart wrapped in a div -->


<p>I say my first &#8220;real&#8221; chart because I had to work my way from a simple chart, to a chart with tooltips, to a chart that would work in <a href="http://octopress.org/">Octopress</a>. So I&#8217;ll start with a basic chart&#8217;s code:</p>

<figure class='code'><figcaption><span><!-- Basic Chart --></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'> <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>Basic Example<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="c">&lt;!--    &lt;link href=&quot;layout.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt; --&gt;</span>
</span><span class='line'>    <span class="c">&lt;!--[if lte IE 8]&gt;&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;excanvas.min.js&quot;&gt;&lt;/script&gt;&lt;![endif]--&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">language=</span><span class="s">&quot;javascript&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;jquery.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">language=</span><span class="s">&quot;javascript&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;jquery.flot.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'> <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Basic Examples<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;placeholder&quot;</span> <span class="na">style=</span><span class="s">&quot;width:600px;height:300px;&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">d1</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">20</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">30</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">40</span><span class="p">],</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">50</span><span class="p">],</span> <span class="p">[</span><span class="mi">6</span><span class="p">,</span><span class="mi">60</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">plot</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#placeholder&quot;</span><span class="p">),</span> <span class="p">[</span><span class="nx">d1</span><span class="p">]);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'> <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here&#8217;s a screencast I did explaining the code.  Next post is a basic chart with more styling.</p>

<iframe width="640" height="360" src="https://www.youtube.com/embed/Nua6weQxMLY?feature=player_detailpage" frameborder="0" allowfullscreen></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Origins of My Octopress Site]]></title>
    <link href="http://irlnathan.github.com/blog/2012/11/28/origins-of-my-octopress-site/"/>
    <updated>2012-11-28T22:29:00-06:00</updated>
    <id>http://irlnathan.github.com/blog/2012/11/28/origins-of-my-octopress-site</id>
    <content type="html"><![CDATA[<p>I&#8217;ve experimented with many ways to document the progress of learning to program.  I decided to try a database-less blog platform and came across <a href="http://octopress.org/">Octopress</a>.  In case you don&#8217;t know this blog is built using Octopress.  I&#8217;d heard a lot about jekyll and after reading a bit of Brandon&#8217;s implementation I decided to give it a try.</p>

<h2>What I Understand So Far</h2>

<p>Octopress is based upon <a href="https://github.com/mojombo/jekyll">jekyll</a> which is a static site generator built in Ruby.  It takes site templates which in my case can include blog posts and runs them through a converter which delivers static web pages that can be served with Apache or other web servers.  This is where Octopress comes in.  Instead of having to create the templates, javascripts, css, etc. necessary for jekyll to work, Octopress does a bunch of the set-up for you.  Essentially all you have to do is install it on your local machine and start writing.</p>
]]></content>
  </entry>
  
</feed>
